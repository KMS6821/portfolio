/* Global */
:root {
  /* App Colors */
  --color-primary: var(--color-black);
  --color-primary-variant: var(--color-gray);
  --color-accent: var(--color-blue);
  --color-accent-variant: var(--color-orange);
  --color-text: var(--color-white);

  /* Colors */
  --color-white: #ffffff;
  --color-black: #050a13;
  --color-blue: #03e8f9;
  --color-orange: #fd6413;
  --color-gray: #1b1e26;

  /* Size */
  --size-max-width: 1200px;
}

/* 모든 box-sizing을 padding과 border까지 합해서 width와 height이 지정될 수 있도록 함 */
* {
  box-sizing: border-box;
}

/* HTML Head부분에 적용했던 Open Sans font를 CSS에 코딩 */
body {
  font-family: "Open Sans", sans-serif;
  margin: 0;
}

/* browser에서 설정된 기본적인 setting값을 reset */
h1,
h2,
h3,
p,
ul {
  margin: 0;
}

/* list-style: none : ul tag에 목록과 같은 item을 제거 */
ul {
  list-style: none;
  padding: 0;
}

/* text-decoration: none : 밑줄을 제거 */
/* a tag가 blue color로 link화 되어있는 것을 black color로 변경 */
a {
  text-decoration: none;
  color: var(--color-text);
}

/* background-color: transparent : button의 색상을 제거 */
button {
  background-color: transparent;
  outline: 0;
  border: 0;
}

button:focus {
  outline: 1px solid var(--color-accent);
}
/* Common */
.section {
  padding: 4rem;
  text-align: center;
}

.max-container {
  max-width: var(--size-max-width);
  margin: auto;
}

.title {
  font-size: 2.5rem;
  margin: 1rem 0;
}

.description {
  font-size: 1.5rem;
  margin: 0.5rem 0;
}

/* Header */
/* flex 옵션을 이용해서 div 와 nav tag를 수평으로 나란히 배치 */
/* justify-content: space-between : 각각 item 사이의 간격을 자동으로 배정*/
/* 'z-index: 1' : header가 가장 높은 곳에 위치할 수 있도록 해줌 */
.header {
  background-color: #050a13;
  position: fixed;
  top: 0;
  width: 100%;
  padding: 1rem;
  display: flex;
  justify-content: space-between;
  align-items: center;
  z-index: 1;
}

.header__logo {
  display: flex;
  align-items: center;
  gap: 8px;
}

.header__logo__img {
  width: 36px;
  height: 36px;
}

/* 1.8rem : 현재 browser에 기본적으로 설정되어 있는 font-size에 1.8배를 해줌 */
.header__logo__title {
  font-size: 1.8rem;
}

.header__menu {
  display: flex;
  gap: 4px;
}

.header__menu__item {
  padding: 8px 16px;
}

.header__menu__item:hover {
  border-bottom: 1px solid var(--color-accent);
}

/* user가 보고 있는 창에 대한 메뉴에 accent를 부여 */
/* 2개의 tag를 가지고 있는 class를 작성할 때에는 붙여서 coding하면 됨 */
.header__menu__item.active {
  border: 1px solid var(--color-accent);
  border-radius: 4px;
}

/* Home */
#home {
  background-color: var(--color-primary);
  color: var(--color-text);
  padding: 5rem 1rem;
  padding-top: 7rem;
  text-align: center;
}

/* object-fit: cover 옵션을 사용하면, image의 원래 비율이 유지 */
.home__avatar {
  width: 250px;
  height: 250px;
  object-fit: cover;
  border-radius: 100%;
  border: 3px solid var(--color-accent);
}

.home__title {
  font-size: 3rem;
  margin-bottom: 1rem;
}

.home_title--strong {
  color: var(--color-accent);
}

.home__description {
  font-size: 1.3rem;
}

/* a tag는 inline tag이기 때문에, 위아래로 margin이 적용되지 않음 >> display: inline-block을 사용하여 a tag가 한 줄을 차지하지만 실제 background는 컨텐츠의 size에 맞게 맞춰지도록 해줌 */
.home__contact {
  display: inline-block;
  background-color: var(--color-accent);
  color: var(--color-black);
  padding: 0.5rem 1rem;
  margin: 2rem;
  font-weight: bold;
  border-radius: 4px;
}

/* background-color: transparent 옵션은 background color를 투명하게 만들어주는 역할 */
/* border를 사용할 경우, home__contact에 height에 대한 정보가 없으므로, border값 만큼 컨텐츠 밀림 현상이 발생함 >> border가 아닌 outline으로 사용하여 방지 */
.home__contact:hover {
  background-color: transparent;
  color: var(--color-text);
  outline: 2px solid var(--color-accent);
}

/* About */
.majors {
  display: flex;
  justify-content: space-between;
  gap: 1rem;
  margin: 2.5rem 0;
}

.major {
  background-color: var(--color-primary-variant);
  padding: 2rem 1rem;
  color: var(--color-text);
  border-radius: 1rem;
  cursor: default;
  box-shadow: 4px 8px 8px rgba(0, 0, 0, 0.38);
}

.major__icon {
  font-size: 4rem;
  margin: 1rem 0;
  color: var(--color-accent);
  transition: all 300ms ease;
}

.major__tilte {
  font-size: 1.5rem;
  font-weight: bold;
  margin-bottom: 1rem;
}

.major:hover .major__icon {
  transform: rotate(-15deg) scale(1.2);
}

.jobs {
  text-align: start;
}

.job {
  display: flex;
  align-items: center;
  gap: 8px;
  margin-bottom: 1rem;
}

.job__name {
  color: var(--color-primary);
}

.job__period {
  color: var(--color-primary);
  font-size: 0.8rem;
}

/* Skills */
#skills {
  background-color: var(--color-primary-variant);
  color: var(--color-text);
}

/* border-radius를 적용했을 경우, grid라는 container에는 적용되지만 각각의 conding, tools, etc에 bg color가 앞으로 나와있어 적용이 안되는 것처럼 보이기 때문에 >> overflow : hidden옵션을 사용하여 자식요소 중에 container 밖으로 나온 요소를 보이지 않도록 해줌  */
.skills {
  display: grid;
  grid-template-columns: 6fr 4fr;
  margin: 2rem 3rem;
  border-radius: 8px;
  overflow: hidden;
  box-shadow: 0 2.8px 2.2px rgba(0, 0, 0, 0.034),
    0 6.7px 5.3px rgba(0, 0, 0, 0.048), 0 12.5px 10px rgba(0, 0, 0, 0.06),
    0 22.3px 17.9px rgba(0, 0, 0, 0.072), 0 41.8px 33.4px rgba(0, 0, 0, 0.086),
    0 100px 80px rgba(0, 0, 0, 0.12);
}

.skills__title {
  color: var(--color-accent);
  margin: 1rem 0;
  font-size: 1.2rem;
}

/* 'grid-row: span 2'를 사용하여 현재 grid에서 coding skills를 2개의 row에 걸쳐서 만듬 */
.skills__coding {
  grid-row: span 2;
  padding: 1rem;
  background-color: var(--color-primary);
}

.skills_tools {
  padding: 1rem;
}

/* coding과 bg color가 같지만 filter기능의 brightness옵션을 사용하여 조금 더 밝게 설정해줌 */
.skills__etc {
  padding: 1rem;
  background-color: var(--color-primary);
  filter: brightness(150%);
}

.bar {
  display: flex;
  flex-direction: column;
  padding: 1rem;
  gap: 0.5rem;
}

.bar__metadata {
  display: flex;
  justify-content: space-between;
}

.bar__bg {
  width: 100%;
  height: 3px;
  background-color: var(--color-primary-variant);
}

.bar__value {
  height: 3px;
  background-color: var(--color-accent);
}

/* Work */
#work {
  background-color: var(--color-primary);
  color: var(--color-text);
}

.categories {
  display: flex;
  justify-content: center;
  margin: 2.5rem;
  gap: 1rem;
}

/* 'white-space: nowrap' : Window size가 변화하더라도 글자가 줄바꿈되지 않도록 해줌 */
.category {
  position: relative;
  color: var(--color-text);
  font-size: 1.1rem;
  padding: 0.5rem 3rem;
  border-radius: 4px;
  border: 1px solid var(--color-accent);
  cursor: pointer;
  white-space: nowrap;
}

.category--selected {
  background-color: var(--color-accent);
  color: var(--color-primary);
}

/* position: absolute로 지정하게 되면, 쏙 빠져나와서 근접한 부모 중에 static이 아닌 부모에게 맞춰지기 때문에 button자체의 position을 relative로 지정해야함 */
.category__count {
  opacity: 0;
  position: absolute;
  top: -20px;
  right: 16px;
  width: 28px;
  height: 28px;
  line-height: 28px;
  border-radius: 100%;
  background-color: var(--color-accent-variant);
  color: var(--color-text);
  transition: all 250ms ease-in;
}

.category--selected .category__count,
.category:hover .category__count {
  opacity: 1;
  top: 0;
}

.projects {
  display: grid;
  grid-template-columns: repeat(4, 1fr);
  grid-template-rows: repeat(2, 1fr);
  gap: 1rem;
}

.project {
  position: relative;
  border-radius: 8px;
  overflow: hidden;
}

.project__img {
  width: 100%;
}

.project__metadata {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: var(--color-black);
  opacity: 0;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  transition: all 250ms ease-in;
  transform: translateY(-10px);
}

.project__metadata:hover {
  opacity: 0.8;
  transform: translateY(0px);
}

/* html에는 없지만 CSS로 가상의 요소를 만들어줌 */
.project__title::after {
  content: "";
  display: block;
  position: relative;
  left: 50%;
  transform: translateX(-50%);
  margin: 0.5rem 0;
  width: 100px;
  height: 2px;
  background-color: var(--color-accent);
}

/* Testimonial */
.testimonials {
  margin: 3rem;
}

.testimonial {
  display: flex;
  gap: 2rem;
  align-items: center;
  margin-bottom: 2rem;
}

/* 'testimonial:nth-child(even)' : testimonial에 있는 list들의 짝수번 째 순서를 지정 / order는 0부터 시작 */
/* 기존의 html을 수정하지 않고, css만으로 배치 수정 */
.testimonial:nth-child(even) .testimonial__img {
  order: 1;
}

.testimonial__img {
  width: 150px;
  height: 150px;
  border-radius: 100%;
  box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;
}

.testimonial__bubble {
  padding: 1rem;
  border-radius: 8px;
  box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;
}

.testimonial__bubble__name {
  color: var(--color-accent);
  font-weight: bold;
  filter: brightness(70%);
}

/* Arrow up */
.arrow-up {
  background-color: var(--color-primary);
  position: fixed;
  bottom: 3rem;
  right: 1rem;
  font-size: 2rem;
  width: 3rem;
  height: 3rem;
  border-radius: 100%;
  text-align: center;
  box-shadow: 2.5px 2.5px 0px 0px var(--color-accent);
}

/* Footer */
#contact {
  background-color: var(--color-primary);
  color: var(--color-text);
}

.contact__links {
  display: flex;
  justify-content: center;
  gap: 1rem;
  padding: 1rem;
  font-size: 2rem;
}

.contact__link {
  transition: color 200ms ease-in;
}

.contact__link:hover {
  color: var(--color-accent);
}

@media screen and (max-width: 768px) {
  .section {
    padding: 3rem;
  }

  .title {
    font-size: 2rem;
  }

  .description {
    font-size: 1rem;
  }

  .header {
    flex-direction: column;
    align-items: start;
  }

  .header__menu {
    flex-direction: column;
    text-align: center;
    padding: 1rem 4rem;
    gap: 1rem;
  }

  .header__nav {
    width: 100%;
  }

  #home {
    padding-bottom: 3rem;
  }

  .home__title {
    font-size: 2.5rem;
    margin-bottom: 0.5rem;
  }

  .majors {
    flex-direction: column;
    align-items: center;
  }

  .major {
    max-width: 25rem;
    width: 100%;
  }

  .job {
    justify-content: center;
  }

  .skills {
    grid-template-columns: 1fr;
  }

  .categories {
    flex-direction: column;
  }

  .category {
    width: 100%;
  }

  .projects {
    grid-template-columns: repeat(2, 1fr);
  }

  .testimonial {
    flex-direction: column;
  }
  .testimonial:nth-child(even) .testimonial__img {
    order: 0;
  }

  .arrow-up {
    font-size: 2rem;
    width: 3rem;
    height: 3rem;
    bottom: 1.5rem;
    right: 1.5rem;
  }
}
